syntax = "proto3";

package ycchat;

import "google/protobuf/timestamp.proto";

service ChatService {
  rpc ListChatRooms(ListChatRoomsRequest) returns (ListChatRoomsResponse);
  rpc ListChatRoomUsers(ListChatRoomUsersRequest) returns (ListChatRoomUsersResponse);
  
  rpc EntryChatRoom(EntryChatRoomRequest) returns (EntryChatRoomResponse);
  rpc LeaveChatRoom(LeaveChatRoomRequest) returns (LeaveChatRoomResponse);
  rpc Conn(ConnectRequest) returns (stream ConnectResponse);
  rpc Speech(SpeechRequest) returns (SpeechResponse);
}

message ListChatRoomsRequest {
  // for example: "users/user001"
  string parent = 1;
  uint32 page_size = 2;
  optional string page_token = 3;
}
message ListChatRoomsResponse {
  repeated ChatRoom rooms = 1;
  uint64 total_size = 2;
  optional string next_page_token = 2;
  optional string prev_page_token = 3;
}

message ListChatRoomUsersRequest {
  // for example: "users/user001/rooms/room001/users"
  string parent = 1;
  uint32 page_size = 2;
  optional string page_token = 3;
}
message ListChatRoomUsersResponse {
  repeated ChatUser users = 1;
  uint64 total_size = 2;
  optional string next_page_token = 3;
  optional string prev_page_token = 4;
}

message EntryChatRoomRequest {
  string room_id = 1;
}
message EntryChatRoomResponse {
  ChatMessage result = 1;
}

message LeaveChatRoomRequest {
  string room_id = 1;
}
message LeaveChatRoomResponse {
  ChatMessage result = 1;
}

message ConnectRequest {}

message ConnectResponse {
  string id = 1; // ULID

  oneof Payload {
    ConnectSuccessResponse connect_success = 2;
    ChatMessage chat_message = 3;
  }
}

message ConnectSuccessResponse {
  string result = 1;
}

message ChatMessage {
  string id = 1; // ULID
  string owner = 2;
  string room_id = 3;
  string message = 4;
  MessageType message_type = 5;
  google.protobuf.Timestamp create_time = 6;

  enum MessageType {
    MESSAGE = 0; // 일반 메세지
    CHAT_ROOM_ENTRY_USER = 1; // 채팅방 유저 입장
    CHAT_ROOM_LEAVE_USER = 2; // 채팅방 유저 퇴장
  }
}

message SpeechRequest {
  string room_id = 1; // ULID
  string message = 2;
}
message SpeechResponse {
  ChatMessage result = 1;
}

message ChatRoom {
  string id = 1;
}

message ChatUser {
  string id = 1;
}
